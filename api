pipeline {
    agent any

    environment {
        // Initialize the product_titles variable to an empty string
        product_titles = ''
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Fetch Products') {
            steps {
                script {
                    echo 'Fetching product titles from API...'
                    def response = httpRequest url: 'https://fakestoreapi.com/products/'
                    if (response.status == 200) {
                        def products = readJSON text: response.content
                        def titles = products.collect { it.title }
                        product_titles = titles.join(',')
                        echo "Product titles fetched: ${titles}"
                    } else {
                        error "Failed to fetch products. Status: ${response.status}"
                    }
                }
            }
        }

        stage('Choose Product') {
            steps {
                script {
                    // Ensure product_titles is not null before using split
                    if (product_titles) {
                        def titlesArray = product_titles.split(',')
                        echo "Product titles array: ${titlesArray}"
                        
                        // Display dropdown and get user input
                        def userChoice = input message: 'Select a product title', ok: 'Submit',
                            parameters: [choice(name: 'Product Title', choices: titlesArray.join('\n'), description: 'Choose a product title')]
                        
                        echo "User selected product: ${userChoice}"
                        // Further processing with userChoice
                    } else {
                        error 'No product titles fetched. Cannot proceed.'
                    }
                }
            }
        }
    }
}
